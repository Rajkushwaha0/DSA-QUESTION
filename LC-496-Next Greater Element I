class Solution {
    public int[] nextGreaterElement(int[] a, int[] b) {
        int [] c=new int[a.length];
        int p=0;
        List<Integer> l = new ArrayList<>();
        for (int j = 0; j <b.length; j++) {
            l.add(b[j]);
        }
        int h=0;
        int d=0;
        for (int i = 0; i < a.length; i++) {
             h= l.indexOf(a[i]);
             int min = b[h];
            for (int k = h+1; k <b.length; k++) {
                if(b[k]>min){
                    min=b[k];
                    break;
               }
            }
            if(min==b[h]){
                c[p]=-1;
                p++;
            }
            else{
                c[p]=min;
                p++;
            }

        }
        return c;
        
    }
}


//stack
class Solution
{
    //Function to find the next greater element for each element of the array.
    public static long[] nextLargerElement(long[] arr, int n)
    { 
        // Your code here
        long[] ans=new long[arr.length];
        Stack<Long> s=new Stack<>();
        for(int i=n-1;i>=0;i--){
            long curr=arr[i];
            while(s.size()!=0 && s.peek()<=curr){
                s.pop();
            }
            if(s.isEmpty()){
                ans[i]=-1;
            }
            else{
                ans[i]=s.peek();
            }
            s.push(curr);
        }
        return ans;
    } 
}
